{"version":3,"sources":["utils/Http.js","utils/api.js","services/UserServices.js","components/Toast/toast.js","pages/user/detail/detail.js"],"names":["Http","url","data","params","Object","entries","reduce","arr","k","v","concat","encodeURIComponent","join","window","fetch","response","json","Error","method","headers","body","JSON","stringify","res","REGIESTER_API","LOGIN_API","CHECK_LOGIN","LOGOUT_API","FIND_FRIEND_BY_KEY_API","FIND_FRIEND_BY__id_API","ADD_FRIEND_API","IS_FRIEND_API","FRIEND_LIST_API","START_CHAT_API","END_CHAT_API","MESSAGE_LIST_API","requestFriendByKey","a","post","api","result","code","message","requestFriendBy_ID","get","requestAddFriend","requestIsFriend","requestFriendList","toast","props","state","show","val","this","id","style","display","oldProps","setState","timer","setTimeout","clearTimeout","React","Component","detail","userInfo","_id","toastVal","isfriend","className","src","averImg","alt","name","desc","city","onClick","addUserAction","bind","toSendMessAction","match","isfriendrequest","friend_id","length","history","push","initdata","addrequest"],"mappings":"0LA2DuBA,G,gJAEFC,EAAIC,G,kFAEbC,EAASC,OAAOC,QAAQH,GAAMI,QAAO,SAACC,EAAD,0BAAOC,EAAP,KAAUC,EAAV,YAAiBF,EAAIG,OAAOC,mBAAmBH,GAAK,IAAMG,mBAAmBF,MAAK,IAAIG,KAAK,K,kBAK3GC,OAAOC,MAAMb,EAAI,IAAIE,G,cAAtCY,E,gBACaA,EAASC,O,cAAtBd,E,yBAGGA,G,wCAED,IAAIe,MAAJ,M,uLAIIhB,EAAIC,G,kGAGOY,MAAMb,EAAI,CAC3BiB,OAAO,OACPC,QAAQ,CAAC,eAAgB,oBACzBC,KAAKC,KAAKC,UAAUpB,K,cAHpBa,E,gBAKUA,EAASC,O,cAAnBO,E,yBACGA,G,wCAED,IAAIN,MAAJ,M,4JCAH,KACXO,cAhFuB,sBAiFvBC,UA1EmB,kBA2EnBC,YArEqB,wBAsErBC,WAhEoB,mBAiEpBC,uBA3DgC,+BA4DhCC,uBArDgC,+BAsDhCC,eA/CwB,wBAgDxBC,cAxCuB,uBAyCvBC,gBAjCyB,kCAkCzBC,eA3BsB,0BA4BtBC,aArBoB,wBAsBpBC,iBAhBwB,8B,uPChFfC,EAAkB,uCAAG,WAAOlC,GAAP,eAAAmC,EAAA,sEACXrC,IAAKsC,KAAKC,IAAIX,uBAAwB1B,GAD3B,UAGX,KAFfsC,EAD0B,QAGpBC,KAHoB,yCAIrBD,EAAOtC,MAJc,gCAMrBsC,EAAOE,SANc,2CAAH,sDAYhBC,EAAkB,uCAAG,WAAOzC,GAAP,eAAAmC,EAAA,sEACbrC,IAAK4C,IAAIL,IAAIV,uBAAwB3B,GADxB,UAGb,KAFfsC,EAD4B,QAGtBC,KAHsB,yCAIvBD,EAAOtC,MAJgB,gCAMvBsC,EAAOE,SANgB,2CAAH,sDAYjBG,EAAgB,uCAAG,WAAO3C,GAAP,eAAAmC,EAAA,sEACZrC,IAAKsC,KAAKC,IAAIT,eAAgB5B,GADlB,UAGZ,KAFfsC,EAD2B,QAGrBC,KAHqB,yCAItBD,GAJsB,gCAMtBA,EAAOE,SANe,2CAAH,sDAWjBI,EAAe,uCAAG,WAAO5C,GAAP,eAAAmC,EAAA,sEACVrC,IAAKsC,KAAKC,IAAIR,cAAe7B,GADnB,UAGV,KAFfsC,EADyB,QAGnBC,KAHmB,yCAIpBD,GAJoB,gCAMpBA,EAAOE,SANa,2CAAH,sDAWbK,EAAiB,uCAAG,WAAO7C,GAAP,eAAAmC,EAAA,sEACZrC,IAAK4C,IAAIL,IAAIP,gBAAiB9B,GADlB,UAGZ,KAFfsC,EAD2B,QAGrBC,KAHqB,yCAItBD,EAAOtC,MAJe,gCAMtBsC,EAAOE,SANe,2CAAH,uD,2FC/C5BM,G,kBACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAM,CACTC,KAAK,QAJU,E,sEAQT,IACHC,EAAKC,KAAKJ,MAAVG,IACAD,EAAME,KAAKH,MAAXC,KACL,OACE,yBAAKG,GAAG,QAAQC,MAAO,CAACC,QAAQL,IAE9B,8BAAOC,EAAIA,Q,yCAKEK,GAAU,IAAD,OAEvBJ,KAAKJ,MAAMG,MAAMK,EAASL,KAE3BC,KAAKK,SAAS,CACZP,KAAK,UACL,WACA,EAAKQ,MAAMC,YAAW,WACpB,EAAKF,SAAS,CACZP,KAAK,WAEP,U,6CAKNU,aAAaR,KAAKM,W,GApCFG,IAAMC,YAwCXf,O,kxBCxCTgB,E,YACN,WAAYf,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTe,SAAS,GACTC,IAAI,GACJC,SAAS,CACLf,IAAI,IAERgB,UAAS,GARE,E,sEAYL,IAAD,EAC4Bf,KAAKH,MAAjCe,EADA,EACAA,SAASE,EADT,EACSA,SAASC,EADlB,EACkBA,SACvB,OAAQ,yBAAKC,UAAU,aACnB,yBAAKA,UAAU,eAAef,GAAG,UAC7B,yBAAKe,UAAU,YACf,yBAAKC,IAAKL,EAASM,SAAS,4FAA6FC,IAAKP,EAASQ,OACvI,4BAAKR,EAASQ,MACd,oCAAUR,EAASX,IACnB,2BAAIW,EAASS,MAAM,6EAEnB,yBAAKL,UAAU,YACX,yBAAKA,UAAU,aACX,uBAAGA,UAAU,0BACb,8BAAOJ,EAASU,MAAM,6BAE1B,yBAAKN,UAAU,gBACX,uBAAGA,UAAU,4BACb,gDAKpB,yBAAKA,UAAU,UAAUd,MAAO,CAACC,QAAQY,EAAS,OAAO,SAAUQ,QAASvB,KAAKwB,cAAcC,KAAKzB,OAApG,4BACA,yBAAKgB,UAAU,UAAUd,MAAO,CAACC,QAAQY,EAAS,QAAQ,QAASQ,QAASvB,KAAK0B,iBAAiBD,KAAKzB,OAAvG,uBAGQ,kBAAC,IAAD,CAAOD,IAAKe,O,iKAMbD,EAAIb,KAAKJ,MAAM+B,MAAM7E,OAAOmD,G,SACZX,YAAmB,CAClCuB,IAAIA,I,OADF1B,E,OAGNa,KAAKK,SAAS,CACVO,SAAS,EAAD,GACDZ,KAAKH,MAAMe,SADV,GAEDzB,GAEP0B,IAAIA,IACN,WACE,EAAKe,qB,yQAKUpC,YAAiB,CAChCqC,UAAU7B,KAAKH,MAAMgB,M,OADnB1B,E,OAGNa,KAAK4B,kBACY,IAAdzC,EAAOC,MACNY,KAAKK,SAAS,CACVS,SAAS,EAAD,GACDd,KAAKH,MAAMiB,SAASf,IADnB,CAEJA,IAAI,2C,wQAOGN,YAAgB,CAC/BoC,UAAU7B,KAAKH,MAAMgB,M,cAEfhE,KAAKiF,QACX9B,KAAKK,SAAS,CACVU,UAAS,I,+IAMjBf,KAAKJ,MAAMmC,QAAQC,KAAK,SAAShC,KAAKH,MAAMgB,O,0CAI5Cb,KAAKiC,a,sCAILjC,KAAKkC,iB,GA/FQzB,IAAMC,WAsGZC","file":"static/js/10.22ae2090.chunk.js","sourcesContent":["// // 提供fetch请求\r\n// // 对fetch进行二次封装\r\n\r\n// import \"whatwg-fetch\";\r\n\r\n// // fetch();\r\n\r\n// export default class Http {\r\n//   static async request(method, url, data) {\r\n//     console.log(data);\r\n//     //get方法的参数直接接在url的后面\r\n//     let dataStr = \"?\";\r\n//     Object.keys(data).map(key => {\r\n//       dataStr += key + \"=\" + data[key];\r\n//     });\r\n\r\n//     //只有post方法有配置项\r\n    \r\n//     let option= method === \"POST\"?{\r\n//         method,\r\n//         headers: {\r\n//           'Content-Type': 'application/json'\r\n//         },\r\n//         body: JSON.stringify(data)\r\n//     }:{};\r\n\r\n//     url = method === \"GET\" ? url + \"?\" + dataStr : url;\r\n\r\n//     const response = await window.fetch(url,option);\r\n\r\n//     return this.isSuccess(response);\r\n//   }\r\n\r\n//   // 判断响应结果是否成功\r\n//   static isSuccess(res) {\r\n//     if (res.status >= 200 && res.status < 300) {\r\n//       return res.json();   //格式化数据\r\n//     } else {\r\n//       this.requestExpection(res);\r\n//     }\r\n//   }\r\n\r\n//   // 构建失败对象\r\n//   static requestExpection(res) {\r\n//     throw new Error(res);\r\n//   }\r\n\r\n//   static get(url, data) {\r\n//     return this.request(\"GET\", url, data);\r\n//   }\r\n\r\n//   // post便捷方法\r\n//   static post(url, data) {\r\n//     return this.request(\"POST\", url, data);\r\n//   }\r\n// }\r\n\r\nimport 'whatwg-fetch'\r\n\r\n  export default class Http{\r\n\r\n    static async get(url,data){\r\n\r\n        let params = Object.entries(data).reduce((arr, [k, v]) => arr.concat(encodeURIComponent(k) + '=' + encodeURIComponent(v)), []).join('&')\r\n        // console.log(url+'?'+params);\r\n        \r\n\r\n        try{\r\n            let response = await window.fetch(url+'?'+params);\r\n            let data = await response.json();\r\n\r\n            \r\n            return data\r\n        } catch(error){\r\n            throw new Error(error)\r\n        }\r\n    }\r\n\r\n    static async post(url,data){\r\n        try{\r\n          // console.log(data);\r\n            let response = await fetch(url,{\r\n                method:'POST',\r\n                headers:{'Content-Type': 'application/json'},\r\n                body:JSON.stringify(data)\r\n            })\r\n            let res=await response.json();\r\n            return res;\r\n        }catch(error){\r\n            throw new Error(error)\r\n        }\r\n    }\r\n  }\r\n","// 管理api\r\nexport const HOST = '';\r\n\r\n\r\n\r\n/* \r\n#### 注册\r\n**method:** post\r\n**参数:** tel      password\r\n*/\r\nconst REGIESTER_API = HOST+'/api/user/regiester';\r\n\r\n/* \r\n#### 登录\r\n**method:** post\r\n**参数:** tel   type('code',  'password' )  value \r\n*/\r\nconst LOGIN_API = HOST+'/api/user/login';\r\n\r\n/*\r\n检查登录\r\n参数：无\r\n*/\r\nconst CHECK_LOGIN = HOST+'/api/user/check_login'\r\n\r\n/*\r\n退出登录\r\n参数：无\r\n*/\r\nconst LOGOUT_API = HOST+'/api/user/logout';\r\n\r\n/*\r\n关键字搜索好友\r\n参数：key\r\n*/\r\nconst FIND_FRIEND_BY_KEY_API = HOST+'/api/user/find_friend_by_key';\r\n\r\n\r\n/*\r\n_id获取好友详细信息\r\n参数：friend_id\r\n*/\r\nconst FIND_FRIEND_BY__id_API = HOST+'/api/user/find_friend_by__id';\r\n\r\n\r\n/*\r\n添加好友\r\n参数：friend_id\r\n*/\r\nconst ADD_FRIEND_API = HOST+'/api/friend/addfriend';\r\n\r\n\r\n\r\n/*\r\n判断是否为好友\r\n参数：friend_id\r\n*/\r\nconst IS_FRIEND_API = HOST+'/api/friend/isfriend';\r\n\r\n\r\n\r\n/*\r\n请求好友列表\r\n参数：null\r\n*/\r\nconst FRIEND_LIST_API = HOST+'/api/friend/find_friend_by_user';\r\n\r\n\r\n/*\r\n开始聊天，请求聊天记录\r\n参数：_id, friend_id\r\n*/\r\nconst START_CHAT_API=HOST+'/api/message/start_chat';\r\n\r\n\r\n/*\r\n结束聊天，保存聊天记录\r\n参数：_id, friend_id\r\n*/\r\nconst END_CHAT_API=HOST+'/api/message/end_chat';\r\n\r\n/*\r\n请求信息列表\r\n参数：_id\r\n*/\r\nconst MESSAGE_LIST_API=HOST+'/api/message/messgae_list';\r\n\r\n\r\n\r\nexport default {\r\n    REGIESTER_API,\r\n    LOGIN_API,\r\n    CHECK_LOGIN,\r\n    LOGOUT_API,\r\n    FIND_FRIEND_BY_KEY_API,\r\n    FIND_FRIEND_BY__id_API,\r\n    ADD_FRIEND_API,\r\n    IS_FRIEND_API,\r\n    FRIEND_LIST_API,\r\n    START_CHAT_API,\r\n    END_CHAT_API,\r\n    MESSAGE_LIST_API\r\n}","import Http from '../utils/Http'\r\nimport api from '../utils/api'\r\n\r\n\r\n// 关键字搜索好友列表\r\nexport const requestFriendByKey = async (data)=>{\r\n    let result = await Http.post(api.FIND_FRIEND_BY_KEY_API, data);\r\n\r\n    if(result.code === 0){\r\n      return result.data\r\n    }else{\r\n      return result.message;\r\n    }\r\n  }\r\n\r\n  \r\n  //请求用户详细信息\r\n  export const requestFriendBy_ID = async (data)=>{\r\n    let result = await Http.get(api.FIND_FRIEND_BY__id_API, data);\r\n\r\n    if(result.code === 0){\r\n      return result.data\r\n    }else{\r\n      return result.message;\r\n    }\r\n  }\r\n\r\n\r\n   //请求添加好友\r\n   export const requestAddFriend = async (data)=>{\r\n    let result = await Http.post(api.ADD_FRIEND_API, data);\r\n\r\n    if(result.code === 0){\r\n      return result\r\n    }else{\r\n      return result.message;\r\n    }\r\n  }\r\n\r\n  //查询是否为好友\r\n  export const requestIsFriend = async (data)=>{\r\n    let result = await Http.post(api.IS_FRIEND_API, data);\r\n\r\n    if(result.code === 0){\r\n      return result\r\n    }else{\r\n      return result.message;\r\n    }\r\n  }\r\n\r\n    //请求好友列表\r\n    export const requestFriendList = async (data)=>{\r\n      let result = await Http.get(api.FRIEND_LIST_API, data);\r\n  \r\n      if(result.code === 0){\r\n        return result.data\r\n      }else{\r\n        return result.message;\r\n      }\r\n    }\r\n\r\n\r\n  export default{\r\n    requestFriendByKey,\r\n    requestFriendBy_ID,\r\n    requestAddFriend,\r\n    requestIsFriend,\r\n    requestFriendList\r\n  }\r\n  ","import React from \"react\";\r\nimport './style.scss'\r\n\r\n\r\nclass toast extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state={\r\n      show:'none'\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let {val}=this.props;\r\n    let {show}=this.state;\r\n    return (\r\n      <div id=\"toast\" style={{display:show}}>\r\n        {/* <div className=\"mask\"></div> */}\r\n        <span>{val.val}</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(oldProps){\r\n\r\n    if(this.props.val!==oldProps.val){\r\n      \r\n      this.setState({\r\n        show:'block'\r\n      },()=>{\r\n        this.timer=setTimeout(()=>{\r\n          this.setState({\r\n            show:'none'\r\n          });\r\n        },3000);\r\n      })\r\n    }\r\n  }\r\n  componentWillUnmount(){\r\n    clearTimeout(this.timer);\r\n  }\r\n}\r\n\r\nexport default toast;\r\n","import React from 'react';\r\nimport \"./style.scss\"\r\nimport {requestFriendBy_ID,requestAddFriend,requestIsFriend} from 'services/UserServices'\r\nimport Toast from 'components/Toast/toast'\r\nclass detail extends React.Component {\r\nconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        userInfo:{},\r\n        _id:'',\r\n        toastVal:{\r\n            val:''\r\n        },\r\n        isfriend:false\r\n    };\r\n}\r\n\r\n    render() {\r\n        let {userInfo,toastVal,isfriend}=this.state;\r\n        return (<div className=\"page-wrap\">\r\n            <div className=\"page subpage\" id=\"detail\">\r\n                <div className=\"userCard\">\r\n                <img src={userInfo.averImg||\"https://m.baidu.com/se/static/wiseatom/personalcenter/assets/img/default_icon_02f13d8.png\"} alt={userInfo.name}/>\r\n                <h3>{userInfo.name}</h3>\r\n                <span>ID:{userInfo.id}</span>\r\n                <p>{userInfo.desc||\"这个用户好懒呀，啥都没说\"}</p>\r\n                </div>\r\n                <div className=\"userFunc\">\r\n                    <div className=\"city func\">\r\n                        <i className=\"iconfont icon-dingwei\"></i>\r\n                        <span>{userInfo.city||\"未知地区\"}</span>\r\n                    </div>\r\n                    <div className=\"moments func\">\r\n                        <i className=\"iconfont icon-ai-camera\"></i>\r\n                        <span>圈子</span>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n    <div className=\"addUser\" style={{display:isfriend?\"none\":\"block\"}} onClick={this.addUserAction.bind(this)}>添加好友</div>\r\n    <div className=\"addUser\" style={{display:isfriend?\"block\":\"none\"}} onClick={this.toSendMessAction.bind(this)}>发信息</div>\r\n            </div>\r\n\r\n            <Toast val={toastVal} />\r\n        </div>);\r\n    }\r\n\r\n\r\n    async initdata(){\r\n       let _id=this.props.match.params.id;\r\n        const result=await requestFriendBy_ID({\r\n            _id:_id\r\n        });\r\n        this.setState({\r\n            userInfo:{\r\n                ...this.state.userInfo,\r\n                ...result\r\n            },\r\n            _id:_id\r\n        },()=>{\r\n            this.isfriendrequest();\r\n        })\r\n    }\r\n\r\n    async addrequest(){\r\n        const result=await requestAddFriend({\r\n            friend_id:this.state._id\r\n        });\r\n        this.isfriendrequest();\r\n        if(result.code===0){\r\n            this.setState({\r\n                toastVal:{\r\n                    ...this.state.toastVal.val,\r\n                    val:\"添加好友成功\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    async isfriendrequest(){\r\n        const result=await requestIsFriend({\r\n            friend_id:this.state._id\r\n        });\r\n        if(result.data.length){\r\n            this.setState({\r\n                isfriend:true\r\n            })\r\n        }\r\n        \r\n    }\r\n    toSendMessAction(){\r\n        this.props.history.push('/chat/'+this.state._id);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.initdata();\r\n    }\r\n\r\n    addUserAction(){\r\n        this.addrequest();\r\n        \r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default detail;"],"sourceRoot":""}