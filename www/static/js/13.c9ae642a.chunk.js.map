{"version":3,"sources":["utils/Http.js","utils/api.js","services/UserServices.js","pages/user/add/chirdren/list.js","pages/user/add/add.js"],"names":["Http","url","data","params","Object","entries","reduce","arr","k","v","concat","encodeURIComponent","join","window","fetch","response","json","Error","method","headers","body","JSON","stringify","res","REGIESTER_API","LOGIN_API","CHECK_LOGIN","LOGOUT_API","FIND_FRIEND_BY_KEY_API","FIND_FRIEND_BY__id_API","ADD_FRIEND_API","IS_FRIEND_API","FRIEND_LIST_API","START_CHAT_API","END_CHAT_API","MESSAGE_LIST_API","requestFriendByKey","a","post","api","result","code","message","requestFriendBy_ID","get","requestAddFriend","requestIsFriend","requestFriendList","list","props","state","this","onGoUserDetail","className","map","item","key","_id","onClick","src","averImg","alt","name","city","React","Component","add","listArr","begin","sumNo","length","noneResult","style","display","Header","title","hasmore","id","type","placeholder","ref","inp","onKeyUp","searchAction","bind","goUserDetail","ev","persist","keyCode","initSearchData","value","console","log","setState","history","push"],"mappings":"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","file":"static/js/13.c9ae642a.chunk.js","sourcesContent":["// // 提供fetch请求\r\n// // 对fetch进行二次封装\r\n\r\n// import \"whatwg-fetch\";\r\n\r\n// // fetch();\r\n\r\n// export default class Http {\r\n//   static async request(method, url, data) {\r\n//     console.log(data);\r\n//     //get方法的参数直接接在url的后面\r\n//     let dataStr = \"?\";\r\n//     Object.keys(data).map(key => {\r\n//       dataStr += key + \"=\" + data[key];\r\n//     });\r\n\r\n//     //只有post方法有配置项\r\n    \r\n//     let option= method === \"POST\"?{\r\n//         method,\r\n//         headers: {\r\n//           'Content-Type': 'application/json'\r\n//         },\r\n//         body: JSON.stringify(data)\r\n//     }:{};\r\n\r\n//     url = method === \"GET\" ? url + \"?\" + dataStr : url;\r\n\r\n//     const response = await window.fetch(url,option);\r\n\r\n//     return this.isSuccess(response);\r\n//   }\r\n\r\n//   // 判断响应结果是否成功\r\n//   static isSuccess(res) {\r\n//     if (res.status >= 200 && res.status < 300) {\r\n//       return res.json();   //格式化数据\r\n//     } else {\r\n//       this.requestExpection(res);\r\n//     }\r\n//   }\r\n\r\n//   // 构建失败对象\r\n//   static requestExpection(res) {\r\n//     throw new Error(res);\r\n//   }\r\n\r\n//   static get(url, data) {\r\n//     return this.request(\"GET\", url, data);\r\n//   }\r\n\r\n//   // post便捷方法\r\n//   static post(url, data) {\r\n//     return this.request(\"POST\", url, data);\r\n//   }\r\n// }\r\n\r\nimport 'whatwg-fetch'\r\n\r\n  export default class Http{\r\n\r\n    static async get(url,data){\r\n\r\n        let params = Object.entries(data).reduce((arr, [k, v]) => arr.concat(encodeURIComponent(k) + '=' + encodeURIComponent(v)), []).join('&')\r\n        // console.log(url+'?'+params);\r\n        \r\n\r\n        try{\r\n            let response = await window.fetch(url+'?'+params);\r\n            let data = await response.json();\r\n\r\n            \r\n            return data\r\n        } catch(error){\r\n            throw new Error(error)\r\n        }\r\n    }\r\n\r\n    static async post(url,data){\r\n        try{\r\n          // console.log(data);\r\n            let response = await fetch(url,{\r\n                method:'POST',\r\n                headers:{'Content-Type': 'application/json'},\r\n                body:JSON.stringify(data)\r\n            })\r\n            let res=await response.json();\r\n            return res;\r\n        }catch(error){\r\n            throw new Error(error)\r\n        }\r\n    }\r\n  }\r\n","// 管理api\r\nexport const HOST = '';\r\n\r\n\r\n\r\n/* \r\n#### 注册\r\n**method:** post\r\n**参数:** tel      password\r\n*/\r\nconst REGIESTER_API = HOST+'/api/user/regiester';\r\n\r\n/* \r\n#### 登录\r\n**method:** post\r\n**参数:** tel   type('code',  'password' )  value \r\n*/\r\nconst LOGIN_API = HOST+'/api/user/login';\r\n\r\n/*\r\n检查登录\r\n参数：无\r\n*/\r\nconst CHECK_LOGIN = HOST+'/api/user/check_login'\r\n\r\n/*\r\n退出登录\r\n参数：无\r\n*/\r\nconst LOGOUT_API = HOST+'/api/user/logout';\r\n\r\n/*\r\n关键字搜索好友\r\n参数：key\r\n*/\r\nconst FIND_FRIEND_BY_KEY_API = HOST+'/api/user/find_friend_by_key';\r\n\r\n\r\n/*\r\n_id获取好友详细信息\r\n参数：friend_id\r\n*/\r\nconst FIND_FRIEND_BY__id_API = HOST+'/api/user/find_friend_by__id';\r\n\r\n\r\n/*\r\n添加好友\r\n参数：friend_id\r\n*/\r\nconst ADD_FRIEND_API = HOST+'/api/friend/addfriend';\r\n\r\n\r\n\r\n/*\r\n判断是否为好友\r\n参数：friend_id\r\n*/\r\nconst IS_FRIEND_API = HOST+'/api/friend/isfriend';\r\n\r\n\r\n\r\n/*\r\n请求好友列表\r\n参数：null\r\n*/\r\nconst FRIEND_LIST_API = HOST+'/api/friend/find_friend_by_user';\r\n\r\n\r\n/*\r\n开始聊天，请求聊天记录\r\n参数：_id, friend_id\r\n*/\r\nconst START_CHAT_API=HOST+'/api/message/start_chat';\r\n\r\n\r\n/*\r\n结束聊天，保存聊天记录\r\n参数：_id, friend_id\r\n*/\r\nconst END_CHAT_API=HOST+'/api/message/end_chat';\r\n\r\n/*\r\n请求信息列表\r\n参数：_id\r\n*/\r\nconst MESSAGE_LIST_API=HOST+'/api/message/messgae_list';\r\n\r\n\r\n\r\nexport default {\r\n    REGIESTER_API,\r\n    LOGIN_API,\r\n    CHECK_LOGIN,\r\n    LOGOUT_API,\r\n    FIND_FRIEND_BY_KEY_API,\r\n    FIND_FRIEND_BY__id_API,\r\n    ADD_FRIEND_API,\r\n    IS_FRIEND_API,\r\n    FRIEND_LIST_API,\r\n    START_CHAT_API,\r\n    END_CHAT_API,\r\n    MESSAGE_LIST_API\r\n}","import Http from '../utils/Http'\r\nimport api from '../utils/api'\r\n\r\n\r\n// 关键字搜索好友列表\r\nexport const requestFriendByKey = async (data)=>{\r\n    let result = await Http.post(api.FIND_FRIEND_BY_KEY_API, data);\r\n\r\n    if(result.code === 0){\r\n      return result.data\r\n    }else{\r\n      return result.message;\r\n    }\r\n  }\r\n\r\n  \r\n  //请求用户详细信息\r\n  export const requestFriendBy_ID = async (data)=>{\r\n    let result = await Http.get(api.FIND_FRIEND_BY__id_API, data);\r\n\r\n    if(result.code === 0){\r\n      return result.data\r\n    }else{\r\n      return result.message;\r\n    }\r\n  }\r\n\r\n\r\n   //请求添加好友\r\n   export const requestAddFriend = async (data)=>{\r\n    let result = await Http.post(api.ADD_FRIEND_API, data);\r\n\r\n    if(result.code === 0){\r\n      return result\r\n    }else{\r\n      return result.message;\r\n    }\r\n  }\r\n\r\n  //查询是否为好友\r\n  export const requestIsFriend = async (data)=>{\r\n    let result = await Http.post(api.IS_FRIEND_API, data);\r\n\r\n    if(result.code === 0){\r\n      return result\r\n    }else{\r\n      return result.message;\r\n    }\r\n  }\r\n\r\n    //请求好友列表\r\n    export const requestFriendList = async (data)=>{\r\n      let result = await Http.get(api.FRIEND_LIST_API, data);\r\n  \r\n      if(result.code === 0){\r\n        return result.data\r\n      }else{\r\n        return result.message;\r\n      }\r\n    }\r\n\r\n\r\n  export default{\r\n    requestFriendByKey,\r\n    requestFriendBy_ID,\r\n    requestAddFriend,\r\n    requestIsFriend,\r\n    requestFriendList\r\n  }\r\n  ","import React from 'react';\r\n\r\n\r\n\r\nclass list extends React.Component {\r\nconstructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n    };\r\n}\r\n\r\n    render() {\r\n        let {data,onGoUserDetail}=this.props;\r\n        return (<div className=\"list\">\r\n            <ul>\r\n            {data.map(item=>{\r\n                return (<li key={item._id} onClick={(()=>{\r\n                    onGoUserDetail(item._id);\r\n                })}>\r\n                    <img src={item.averImg||\"https://m.baidu.com/se/static/wiseatom/personalcenter/assets/img/default_icon_02f13d8.png\"} alt={item.name}/>\r\n                    <div className=\"item-right\">\r\n                        <h3>{item.name}</h3>\r\n                        <span>{item.city||'未知地区'}</span>\r\n                        <i className=\"iconfont icon-arrow\"></i>\r\n                    </div>\r\n                </li>)\r\n            })}\r\n            </ul>\r\n        </div>)\r\n    }\r\n\r\n    // toUserDetail(id){\r\n    //     console.log(id);\r\n    //     console.log(this.props);\r\n    //     // \r\n    // }\r\n\r\n}\r\n\r\n\r\nexport default list;","import React from \"react\";\r\nimport \"./style.scss\";\r\nimport Header from \"components/Header/Header\";\r\nimport List from \"./chirdren/list\"\r\nimport {requestFriendByKey} from 'services/UserServices'\r\n\r\n\r\nclass add extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        listArr:[],\r\n        begin:false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    \r\n    let sumNo= <p className=\"sumNo\" >共搜索到{this.state.listArr.length}位好友</p>;\r\n    let noneResult=<div className=\"noneResult\" style={{display:this.state.begin?\"block\":\"none\"}}><i className=\"iconfont icon-kong\"></i> <span>无搜索结果</span></div>;\r\n\r\n    let result=null;\r\n    if(this.state.listArr.length<=0){\r\n        result=noneResult;\r\n    }else{\r\n        result=sumNo;\r\n    }\r\n\r\n    return (\r\n      <div className=\"page-wrap\">\r\n        <Header title={\"添加好友\"} hasmore={true} {...this.props} />\r\n        <div className=\"page subpage\" id=\"add\">\r\n          <div className=\"add_search\">\r\n            <i className=\"iconfont icon-sousuo\"></i>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"搜索好友昵称\"\r\n              ref={(inp)=>{\r\n                  this.inp=inp\r\n              }}\r\n              onKeyUp={this.searchAction.bind(this)}\r\n            />\r\n          </div>\r\n\r\n          <List data={this.state.listArr} onGoUserDetail={this.goUserDetail.bind(this)} />\r\n\r\n            {result}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  searchAction(ev) {\r\n    ev.persist();\r\n    // console.log(ev.keyCode)\r\n    if(ev.keyCode===13){\r\n        this.initSearchData(this.inp.value);\r\n    }\r\n\r\n  }\r\n\r\n  async initSearchData(value){\r\n    \r\n      const result=await requestFriendByKey({\r\n          \"key\":value\r\n      });\r\n      console.log(result);\r\n      this.setState({\r\n        listArr:result,\r\n        begin:true\r\n      })\r\n      \r\n  }\r\n\r\n  goUserDetail(id){\r\n    this.props.history.push('/user/add/detail/'+id);\r\n  }\r\n}\r\n\r\nexport default add;\r\n"],"sourceRoot":""}